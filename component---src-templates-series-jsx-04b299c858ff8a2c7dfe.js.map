{"version":3,"file":"component---src-templates-series-jsx-04b299c858ff8a2c7dfe.js","mappings":"0JAGA,MAAMA,E,QAAUC,QAAOC,GAAEC,WAAA,CAAAC,YAAA,UAAAC,YAAA,eAATJ,CAAS,+EACTK,GAASA,EAAMC,KACZD,GAASA,EAAME,KAELF,GAASA,EAAMG,MAAMC,OAAOC,UAGzDX,EAAQY,UAAY,CAClBL,GAAIM,IAAAA,OACJL,GAAIK,IAAAA,QAGNb,EAAQc,aAAe,CACrBP,GAAI,OACJC,GAAI,QAGN,K,wGCVA,MAAMO,EAASd,EAAAA,QAAOe,IAAGb,WAAA,CAAAC,YAAA,iBAAAC,YAAA,eAAVJ,CAAU,iDAMnBgB,EAAQhB,EAAAA,QAAOiB,GAAEf,WAAA,CAAAC,YAAA,gBAAAC,YAAA,eAATJ,CAAS,0GAKXK,GAAUA,EAAMG,MAAMC,OAAOS,OAInCC,EAAWnB,EAAAA,QAAOoB,GAAElB,WAAA,CAAAC,YAAA,mBAAAC,YAAA,eAATJ,CAAS,gKAOHK,GAAUA,EAAMG,MAAMC,OAAOS,OACxCb,GAAUA,EAAMG,MAAMC,OAAOY,iBAInCC,EAAetB,EAAAA,QAAOe,IAAGb,WAAA,CAAAC,YAAA,uBAAAC,YAAA,eAAVJ,CAAU,sFAInBK,GAAUA,EAAMG,MAAMC,OAAOS,OAOnCK,EAAOvB,EAAAA,QAAOwB,KAAItB,WAAA,CAAAC,YAAA,eAAAC,YAAA,eAAXJ,CAAW,oCACZK,GAAUA,EAAMG,MAAMC,OAAOgB,eAgDzC,UA5CeC,IAA4B,IAADC,EAAA,IAA1B,YAAEC,EAAW,KAAEC,GAAMH,EACnC,MAAMI,EAAaF,EAAYG,OAEzBC,EADQH,EAAKI,MAAMC,MACGC,QAAOC,GAAQA,EAAKC,YAAYN,SAAWD,IAEvE,OACEQ,EAAAA,cAACC,EAAAA,EAAM,KACLD,EAAAA,cAACE,EAAAA,EAAG,CACFC,MAAO,WAAWX,IAClBY,YAAaA,EAAAA,YACbC,IAAK,GAAGC,EAAAA,kBAAkBd,MAG5BQ,EAAAA,cAACxB,EAAM,KACLwB,EAAAA,cAACnB,EAAQ,KAAC,YACVmB,EAAAA,cAACtB,EAAK,KAAC,IAAEc,EAAW,KAEpBQ,EAAAA,cAAChB,EAAY,KACXgB,EAAAA,cAAA,YAAON,EAAca,OAAO,UAC5BP,EAAAA,cAAA,YAAM,KACNA,EAAAA,cAACf,EAAI,KAAC,mBAAiC,QAAjBI,EAACK,EAAc,UAAE,IAAAL,OAAA,EAAhBA,EAAkBU,YAAYS,OAGvDR,EAAAA,cAACvC,EAAAA,EAAO,OAGVuC,EAAAA,cAAA,WACGN,EAAca,OAAS,EACtBb,EAAce,KAAI,CAACX,EAAMY,KAAC,IAAAC,EAAA,OACxBX,EAAAA,cAAA,OAAKY,IAAKF,EAAGG,YAAaf,EAAKe,aAC7Bb,EAAAA,cAACc,EAAAA,KAAI,CAACC,IAAe,QAAXJ,EAAAb,EAAKkB,cAAM,IAAAL,OAAA,EAAXA,EAAaM,OAAQ,KAC5BnB,EAAKC,YAAYI,OAAS,YAE5BL,EAAKe,aAAeb,EAAAA,cAAA,YAAM,kBACvB,IAGRA,EAAAA,cAAA,SAAG,oCAGA,C","sources":["webpack://gatsby-starter-hoodie/./src/components/Divider/index.jsx","webpack://gatsby-starter-hoodie/./src/templates/Series.jsx"],"sourcesContent":["import PropTypes from \"prop-types\"\nimport styled from \"styled-components\"\n\nconst Divider = styled.hr`\n  margin-top: ${props => props.mt};\n  margin-bottom: ${props => props.mb};\n  border: none;\n  border-bottom: 1px solid ${props => props.theme.colors.divider};\n`\n\nDivider.propTypes = {\n  mt: PropTypes.string,\n  mb: PropTypes.string,\n}\n\nDivider.defaultProps = {\n  mt: \"48px\",\n  mb: \"48px\",\n}\n\nexport default Divider\n","import React from \"react\";\nimport { graphql, Link } from \"gatsby\";\nimport styled from \"styled-components\";\n\nimport Layout from \"components/Layout\";\nimport SEO from \"components/SEO\";\nimport Divider from \"components/Divider\";\n\nimport { description, siteUrl } from \"../../blog-config\";\n\nconst Header = styled.div`\n  @media (max-width: 768px) {\n    padding: 0px 15px;\n  }\n`;\n\nconst Title = styled.h1`\n  margin-bottom: 15px;\n  line-height: 1.2;\n  font-size: 44.8px;\n  font-weight: bold;\n  color: ${(props) => props.theme.colors.text};\n  word-break: break-all;\n`;\n\nconst Subtitle = styled.h3`\n  display: inline-block;\n  padding: 2px 3px;\n  margin-top: 32px;\n  margin-bottom: 8px;\n  font-size: 20px;\n  font-weight: bold;\n  background-color: ${(props) => props.theme.colors.text};\n  color: ${(props) => props.theme.colors.bodyBackground};\n  letter-spacing: -1px;\n`;\n\nconst SeriesInform = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 16px;\n  color: ${(props) => props.theme.colors.text};\n\n  & > span {\n    margin: 0 3px;\n  }\n`;\n\nconst Date = styled.span`\n  color: ${(props) => props.theme.colors.tertiaryText};\n  font-weight: lighter;\n`;\n\nconst Series = ({ pageContext, data }) => {\n  const seriesName = pageContext.series;\n  const posts = data.posts.nodes;\n  const filteredPosts = posts.filter(post => post.frontmatter.series === seriesName);\n\n  return (\n    <Layout>\n      <SEO\n        title={`SERIES: ${seriesName}`}\n        description={description}\n        url={`${siteUrl}/series/${seriesName}`}\n      />\n\n      <Header>\n        <Subtitle> SERIES </Subtitle>\n        <Title> {seriesName} </Title>\n\n        <SeriesInform>\n          <span>{filteredPosts.length} Posts</span>\n          <span>·</span>\n          <Date>Last updated on {filteredPosts[0]?.frontmatter.date}</Date>\n        </SeriesInform>\n\n        <Divider />\n      </Header>\n\n      <div>\n        {filteredPosts.length > 0 ? (\n          filteredPosts.map((post, i) => (\n            <div key={i} currentPost={post.currentPost}>\n              <Link to={post.fields?.slug || \"#\"}>\n                {post.frontmatter.title || \"Untitled\"}\n              </Link>\n              {post.currentPost && <span>← Current Post</span>}\n            </div>\n          ))\n        ) : (\n          <p>No posts found for this series.</p>\n        )}\n      </div>\n    </Layout>\n  );\n};\n\nexport default Series;\n\nexport const pageQuery = graphql`\n  query BlogSeriesBySeriesName($series: String!) {\n    posts: allMarkdownRemark(\n      sort: { frontmatter: { date: DESC } }\n      filter: { frontmatter: { series: { eq: $series } } }\n    ) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          title\n          date(formatString: \"MMMM DD, YYYY\")\n          tags\n        }\n      }\n    }\n  }\n`;"],"names":["Divider","styled","hr","withConfig","displayName","componentId","props","mt","mb","theme","colors","divider","propTypes","PropTypes","defaultProps","Header","div","Title","h1","text","Subtitle","h3","bodyBackground","SeriesInform","Date","span","tertiaryText","_ref","_filteredPosts$","pageContext","data","seriesName","series","filteredPosts","posts","nodes","filter","post","frontmatter","React","Layout","SEO","title","description","url","siteUrl","length","date","map","i","_post$fields","key","currentPost","Link","to","fields","slug"],"sourceRoot":""}