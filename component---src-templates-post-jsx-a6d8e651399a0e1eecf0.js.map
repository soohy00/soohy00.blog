{"version":3,"file":"component---src-templates-post-jsx-a6d8e651399a0e1eecf0.js","mappings":"gMA6CA,UAtCaA,IAA4B,IAA3B,KAAEC,EAAI,YAAEC,GAAaF,EACjC,MAAMG,EAAOF,EAAKG,gBACZ,MAAEC,EAAK,KAAEC,EAAI,KAAEC,EAAI,OAAEC,GAAWL,EAAKM,aACrC,QAAEC,GAAYP,GACd,KAAEQ,GAASR,EAAKS,OAIhBC,GADaZ,EAAKa,WAAWC,OAAS,IACVC,KAAIC,IAAU,IAC3CA,EACHC,YAAaD,EAAWE,KAAOhB,EAAKgB,OAGtC,OACEC,EAAAA,cAACC,EAAAA,EAAM,KACLD,EAAAA,cAACE,EAAAA,EAAG,CAACjB,MAAOA,EAAOkB,YAAab,EAASc,IAAK,GAAGC,EAAAA,UAAUd,MAC3DS,EAAAA,cAACM,EAAAA,EAAO,KACNN,EAAAA,cAACM,EAAAA,EAAQC,OAAM,CAACtB,MAAOA,EAAOC,KAAMA,EAAMC,KAAMA,IAC/CM,EAAee,OAAS,GACvBR,EAAAA,cAACM,EAAAA,EAAQG,OAAM,CAACC,OAAQtB,EAAQA,OAAQK,IAE1CO,EAAAA,cAACM,EAAAA,EAAQK,KAAI,CAACC,KAAM7B,EAAK6B,OAEzBZ,EAAAA,cAAA,WACGP,EAAeG,KAAI,CAACC,EAAYgB,KAAC,IAAAC,EAAA,OAChCd,EAAAA,cAAA,OAAKe,IAAKF,GACRb,EAAAA,cAAA,KAAGgB,MAAuB,QAAjBF,EAAAjB,EAAWL,cAAM,IAAAsB,OAAA,EAAjBA,EAAmBvB,OAAQ,KACjCM,EAAWR,YAAYJ,OAAS,YAElCY,EAAWC,aAAeE,EAAAA,cAAA,YAAM,aAC7B,MAIL,C","sources":["webpack://gatsby-starter-hoodie/./src/templates/Post.jsx"],"sourcesContent":["import React from \"react\";\nimport SEO from \"components/SEO\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"components/Layout\";\nimport Article from \"components/Article\";\nimport { siteUrl } from \"../../blog-config\";\n\nconst Post = ({ data, pageContext }) => {\n  const post = data.markdownRemark;\n  const { title, date, tags, series } = post.frontmatter;\n  const { excerpt } = post;\n  const { slug } = post.fields;\n\n  // Series data from the query with conditional slug check\n  const seriesList = data.seriesList.nodes || [];\n  const filteredSeries = seriesList.map(seriesPost => ({\n    ...seriesPost,\n    currentPost: seriesPost.id === post.id,\n  }));\n\n  return (\n    <Layout>\n      <SEO title={title} description={excerpt} url={`${siteUrl}${slug}`} />\n      <Article>\n        <Article.Header title={title} date={date} tags={tags} />\n        {filteredSeries.length > 0 && (\n          <Article.Series header={series} series={filteredSeries} />\n        )}\n        <Article.Body html={post.html} />\n        {/* Series Navigation */}\n        <div>\n          {filteredSeries.map((seriesPost, i) => (\n            <div key={i}>\n              <a href={seriesPost.fields?.slug || \"#\"}>\n                {seriesPost.frontmatter.title || \"Untitled\"}\n              </a>\n              {seriesPost.currentPost && <span>‚Üê Current</span>}\n            </div>\n          ))}\n        </div>\n      </Article>\n    </Layout>\n  );\n};\n\nexport default Post;\n\nexport const query = graphql`\n  query BlogPostBySlug($slug: String!, $series: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      excerpt\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        tags\n        series\n      }\n      fields {\n        slug\n      }\n    }\n    seriesList: allMarkdownRemark(\n      filter: { frontmatter: { series: { eq: $series } } }\n    ) {\n      nodes {\n        id\n        fields {\n          slug\n        }\n        frontmatter {\n          title\n          date(formatString: \"MMMM DD, YYYY\")\n        }\n      }\n    }\n  }\n`;"],"names":["_ref","data","pageContext","post","markdownRemark","title","date","tags","series","frontmatter","excerpt","slug","fields","filteredSeries","seriesList","nodes","map","seriesPost","currentPost","id","React","Layout","SEO","description","url","siteUrl","Article","Header","length","Series","header","Body","html","i","_seriesPost$fields","key","href"],"sourceRoot":""}